logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: debug
spring:
  output:
    ansi:
      enabled: always
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${{ secrets.DB_MYSQL_URI }}
    username: ${{ secrets.DB_MYSQL_USERNAME }}
    password: ${{ secrets.DB_MYSQL_PASSWORD }}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
    hibernate:
#      ddl-auto: none
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${{ secrets.NAVER_CLIENT_ID }}
            client-secret: ${{ secrets.NAVER_CLIENT_SECRET }}
            redirect-uri: ${{ secrets.NAVER_REDIRECT_URI }}
            client-authentication-method: post
            authorization-grant-type: authorization_code
            scope: nickname,email,profile_image
            client-name: Naver
          kakao:
            client-id: ${{ secrets.KAKAO_CLIENT_ID }}
            client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}
            redirect-uri: ${{ secrets.KAKAO_REDIRECT_URI }}
            client-authentication-method: post
            authorization-grant-type: authorization_code
            scope: profile_nickname,profile_image,account_email
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

app:
  auth:
    tokenSecret: ${{ secrets.JWT_TOKEN_SECRET }}
    accessTokenExpirationMsec: 1800000
    refreshTokenExpirationMsec: 604800000
  cors:
    allowedOrigins: http://localhost:3000, http://localhost:8080
  oauth2:
    authorizedRedirectUris: ${{ secrets.OAUTH2_REDIRECT_URIS }}

server:
  error:
    include-exception: true
    include-stacktrace: always
  port: 8080

springdoc:
  swagger-ui:
    path: swagger
    tryItOutEnabled: true
    filter: true
    operationsSorter: method
    displayRequestDuration: true
    supportedSubmitMethods: ["get", "put", "post"]

clova:
  url: https://clovastudio.apigw.ntruss.com/testapp/v1/completions/LK-D2
  X-NCP-CLOVASTUDIO-API-KEY: ${{ secrets.NCP_CLOVASTUDIO_API_KEY }}
  X-NCP-APIGW-API-KEY: ${{ secrets.NCP_APIGW_API_KEY }}
  X-NCP-CLOVASTUDIO-REQUEST-ID: ${{ secrets.NCP_CLOVASTUDIO_REQUEST_ID }}

cloud:
  ncp:
    credentials:
      accessKey: ${{ secrets.NCP_S3_ACCESS_KEY }}
      secretKey: ${{ secrets.NCP_S3_SECRET_KEY }}
    region: kr-standard
    s3:
      bucket:
        name: haruharu
        url: https://kr.object.ncloudstorage.com/haruharu